substitutions:
  name: upstairs-aq
  id_prefix: upstairs_aq
  friendly_name: "Upstairs Air Quality"

globals:
# to convert CPM to uSv/hr (data from here: https://cdn.sparkfun.com/assets/learn_tutorials/1/4/3/GeigerCounterType5_Certification_VSL_cert_3320408.pdf)
   - id: conv_factor 
     type: float
     restore_value: no
     initial_value: '0.0725'

esphome:
  name: ${name}
  friendly_name: ${friendly_name}

esp8266:
  board: nodemcuv2

packages:
  wifi: !include common/wifi.yaml
  device_base: !include common/device_base.yaml

i2c:
  sda: D2
  scl: D1
  scan: true
  #id: bus_a

# NodeMCU onboard LED
output:
  - platform: gpio
    pin:
      number: D4
      inverted: true
      mode: OUTPUT
    id: ${id_prefix}_gpio_d4

sensor:

##### Pocket Geiger Radiation Sensor - Type 5 #####
# Radiation pulse input using pulse counter (https://esphome.io/components/sensor/pulse_counter.html)
  - platform: pulse_counter
    pin:
      number: D5
      mode:
        input: true
        pullup: true
    name: "Radiation CPM"
    id: ${id_prefix}_radiation_cpm
    unit_of_measurement: "cpm"
    icon: "mdi:radioactive"
    count_mode:
      rising_edge: DISABLE
      falling_edge: INCREMENT
    internal_filter: 200us
    update_interval: 300s # report every 5 minutes
    accuracy_decimals: 1
    filters:
      - filter_out: 0.0 # don't send a 0.0 value (this occurs on boot)
    # total: # don't use this (updates only every update_interval)
    #   name: "${name} Total Radiation Counts"
    #   id: "${name}_total_radiation_counts"
    #   unit_of_measurement: "counts"
    #   icon: "mdi:radioactive"
    #   accuracy_decimals: 0

# Radiation pulse input using pulse meter (https://esphome.io/components/sensor/pulse_meter.html)
  - platform: pulse_meter
    internal: true # do not expose to home assistant (radiation detection events are random, calculating rate this way results in huge spikes, using the filters overestimates the rate)
    pin:
      number: D7
      mode:
        input: true
        pullup: true
    name: "Radiation CPM meter"
    id: ${id_prefix}_radiation_cpm_meter
    unit_of_measurement: "cpm"
    icon: "mdi:radioactive"
    internal_filter: 200us
    accuracy_decimals: 1
    timeout: 1 min
    # filters:
      # moving median filter to smooth the random nature of detected events (note: using this or moving average artificially increases cpm)
      # - median:
      #     window_size: 10
      #     send_every: 10
      #     send_first_at: 10
    on_raw_value: # blink onboard LED whenever a pulse is detected
      then:
        - output.turn_on: ${id_prefix}_gpio_d4
        - delay: 50ms
        - output.turn_off: ${id_prefix}_gpio_d4
    total:
      internal: false # do expose this, it updates on every detected pulse
      name: "Total Radiation Counts"
      id: ${id_prefix}_total_radiation_counts
      unit_of_measurement: "counts"
      icon: "mdi:radioactive"
      accuracy_decimals: 0

# Calculate dose rate (µS/hr) from CPM
  - platform: template
    name: "Radiation Dose Rate"
    id: ${id_prefix}_radiation_dose_rate
    unit_of_measurement: "µS/hr"
    icon: "mdi:radioactive"
    accuracy_decimals: 2
    lambda: |-
      return id(${id_prefix}_radiation_cpm).state * id(conv_factor);

# Calculate long term CPM (since boot) from total counts and uptime
  - platform: template
    name: "Long Term Radiation CPM"
    id: ${id_prefix}_long_term_radiation_cpm
    unit_of_measurement: "cpm"
    icon: "mdi:radioactive"
    accuracy_decimals: 2
    lambda: |-
      return id(${id_prefix}_total_radiation_counts).state / id(${id_prefix}_uptime).state * 60.0;

# Calculate long term dose rate (since boot) from previous template sensor
  - platform: template
    name: "Long Term Radiation Dose Rate"
    id: ${id_prefix}_long_term_radiation_dose_rate
    unit_of_measurement: "µS/hr"
    icon: "mdi:radioactive"
    accuracy_decimals: 3
    lambda: |-
      return id(${id_prefix}_long_term_radiation_cpm).state * id(conv_factor);

# Noise pulse input
  - platform: pulse_counter
    pin:
      number: D6
      mode:
        input: true
        pullup: true
    name: "Noise CPM"
    id: ${id_prefix}_noise_cpm
    unit_of_measurement: "cpm"
    icon: "mdi:bell-alert"
    count_mode:
      rising_edge: DISABLE
      falling_edge: INCREMENT
    #internal_filter: 13us
    update_interval: 60s
    accuracy_decimals: 1
    total:
      name: "Total Noise Counts"
      id: ${id_prefix}_total_noise_counts
      unit_of_measurement: "counts"
      icon: "mdi:bell-alert"
      accuracy_decimals: 0

##### SCD30 CO2 sensor #####
  - platform: scd30
    co2:
      name: "NDIR CO2"
      id: ${id_prefix}_ndir_co2
      accuracy_decimals: 0
    temperature:
      name: "Temperature"
      id: ${id_prefix}_temperature
      accuracy_decimals: 1
    humidity:
      name: "Humidity"
      id: ${id_prefix}_humidity
      accuracy_decimals: 0
    #temperature_offset: 1.5 °C
    automatic_self_calibration: true
    #ambient_pressure_compensation: 800mbar
    altitude_compensation: 1829m
    address: 0x61
    update_interval: 60s

##### Particulate Matter Sensor - SPS30 #####
  - platform: sps30
    pm_1_0:
      name: "PM <1µm Mass concentration"
      id: ${id_prefix}_pm_1_0
    pm_2_5:
      name: "PM <2.5µm Mass concentration"
      id: ${id_prefix}_pm_2_5
    pm_4_0:
      name: "PM <4µm Mass concentration"
      id: ${id_prefix}_pm_4_0
    pm_10_0:
      name: "PM <10µm Mass concentration"
      id: ${id_prefix}_pm_10_0
    pmc_0_5:
      name: "PM <0.5µm Number concentration"
      id: ${id_prefix}_pmc_0_5
    pmc_1_0:
      name: "PM <1µm Number concentration"
      id: ${id_prefix}_pmc_1_0
    pmc_2_5:
      name: "PM <2.5µm Number concentration"
      id: ${id_prefix}_pmc_2_5
    pmc_4_0:
      name: "PM <4µm Number concentration"
      id: ${id_prefix}_pmc_4_0
    pmc_10_0:
      name: "PM <10µm Number concentration"
      id: ${id_prefix}_pmc_10_0
    address: 0x69
    update_interval: 60s

##### CCS811 TVOC sensor #####
  - platform: ccs811
    eco2:
      name: "eCO2"
      id: ${id_prefix}_eco2
    tvoc:
      name: "TVOC"
      id: ${id_prefix}_tvoc
    address: 0x5A
    temperature: ${id_prefix}_temperature
    humidity: ${id_prefix}_humidity
    update_interval: 60s
    