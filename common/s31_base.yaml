# https://www.esphome-devices.com/devices/Sonoff-S31

esphome:
  name: ${name}

esp8266:
  board: esp12e
  restore_from_flash: true # save some values to flash
  early_pin_init: true # default

packages:
  wifi: !include wifi.yaml
  device_base: !include device_base.yaml
  esp8266vcc_adc: !include esp8266vcc_adc.yaml

logger:
  baud_rate: 0 # (UART logging interferes with cse7766 sensor)

uart:
  rx_pin: RX
  baud_rate: 4800

status_led:
  pin: 
    number: GPIO13
    inverted: False # LED is Active low. Don't use inverted so that LED is default on when no error - for power indication

number:
  - platform: template
    name: "${name} Connected Device Power Threshold"
    id: connected_device_power_threshold
    disabled_by_default: true
    optimistic: true
    min_value: 0
    max_value: 2000
    step: 1
    restore_value: true
    initial_value: 10

  - platform: template
    name: "${name} Button Lockout Time"
    id: button_lockout_time
    disabled_by_default: true
    optimistic: true
    min_value: 0
    max_value: 5000
    step: 100
    restore_value: true
    initial_value: 100

binary_sensor:
  - platform: gpio
    name: "${name} Button"
    internal: True
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: True
    filters:
      delayed_off: !lambda return id(button_lockout_time).state;
    on_press:
      if:
        condition:
          switch.is_off: disable_button_switch
        then:
          - switch.toggle: relay
        else:
          - logger.log:
              format: "Physical button pressed, but it is disabled via software setting."
              level: INFO
  
  - platform: template
    name: "${name} Connected Device Status"
    disabled_by_default: True
    device_class: running
    lambda: |-
      if (id(cse7766_power).state > id(connected_device_power_threshold).state) {
        // Device is on.
        return true;
      } else {
        // Device is off.
        return false;
      }

button:
  # on-plug action to power cycle the connected device
  - platform: template
    name: "${name} Restart Connected"
    disabled_by_default: True
    icon: "mdi:restart-alert"
    on_press:
      then: 
        - switch.turn_off: relay
        - delay: 5s
        - switch.turn_on: relay

switch:
  - platform: gpio
    name: "${name} Relay"
    pin: GPIO12
    id: relay
    icon: "mdi:power-plug"
    restore_mode: RESTORE_DEFAULT_ON

  - platform: template
    name: "${name} Disable Button"
    id: disable_button_switch
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    disabled_by_default: True

sensor:
  - platform: cse7766
    current:
      name: "${name} Current"
      accuracy_decimals: 2
      icon: "mdi:current-ac"
      filters:
        - throttle_average: 10s
    voltage:
      name: "${name} Voltage"
      accuracy_decimals: 1
      filters:
        - throttle_average: 10s
    power:
      name: ${name} Power
      id: cse7766_power
      icon: "mdi:lightning-bolt-circle"
      accuracy_decimals: 2
      filters:
        - throttle_average: 10s
        - lambda: |-
            if (id(relay).state) {
              return x;   
            } else {
              return 0;
            }
    energy:
      name: "${name} Energy"
      state_class: total_increasing
      device_class: energy
      accuracy_decimals: 3
      unit_of_measurement: 'kWh'
      filters:
        - throttle_average: 10s
        # Multiplication factor from W to kW is 0.001
        - multiply: 0.001
    apparent_power:
      name: "${name} Apparent Power"
      icon: "mdi:lightning-bolt-circle"
      accuracy_decimals: 2
      filters:
        - throttle_average: 10s
        - lambda: |-
            if (id(relay).state) {
              return x;   
            } else {
              return 0;
            }
    power_factor:
      name: "${name} Power Factor"
      accuracy_decimals: 2
      filters:
        - throttle_average: 10s

  - platform: total_daily_energy
    name: "${name} Total Daily Energy"
    power_id: cse7766_power
    unit_of_measurement: 'kWh'
    state_class: total_increasing
    device_class: energy
    accuracy_decimals: 3
    filters:
      # Multiplication factor from W to kW is 0.001
      - multiply: 0.001

# Enable time component to reset energy at midnight
time:
  - platform: homeassistant
    id: homeassistant_time
